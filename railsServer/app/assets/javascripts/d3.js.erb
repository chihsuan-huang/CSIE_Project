var width = 1300,
    height = 900;

var force = d3.layout.force()
    .charge(-120)
    .linkDistance(450)
    .linkStrength(5)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/data.json", function(error, graph) {
   force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); });


  var labels = svg.selectAll('text')
    .data(graph.links)
  .enter().append('text')
    .attr("x", function(d) { return (d.source.y + d.target.y) / 2; }) 
    .attr("y", function(d) { return (d.source.x + d.target.x) / 2; }) 
    .attr("text-anchor", "middle") 
    .text(function(d) {return d.label;}); 

  var node = svg.selectAll(".node")
      .data(graph.nodes)
    .enter().append("svg:image")
      .attr("class", "node")
      .attr("r", 5)
      .style("fill", function(d) { return color(d.group); })
      .attr("xlink:href", function(d){
          return "/" + d.name + '0.jpg';
   })  
      .attr("width", 60)
      .attr("height",60)
      .on("dblclick.zoom", function(d) {
		imgIndex[d.ID] += 1;
		check = CheckImg( "/" + d.name + imgIndex[d.ID].toString() + ".jpg" );
		if(check){
			d3.select(this)  
				.attr( {"xlink:href" : "/" + d.name + imgIndex[d.ID].toString() +'.jpg' } );
      		}
		else{
			imgIndex[d.ID] = 0;
			d3.select(this)
				.attr( {"xlink:href" : "/" + d.name + '0.jpg' } );
		}
	})
      .call(force.drag);

  var imgIndex = Array.apply(null, new Array(5)).map(Number.prototype.valueOf,0);


  node.append("title")
      .text(function(d) { return d.name; });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) {
      return "translate(" + d.x + "," + d.y + ")";
    });

    labels.attr("x", function(d) { return (d.target.x + (d.source.x + d.target.x)/2)/2; }) 
        .attr("y", function(d) { return (d.target.y + (d.source.y + d.target.y)/2)/2  ; }) 
  });
});

function CheckImg(url){
    var http = new XMLHttpRequest();
    http.open('HEAD', url, false);
    http.send();
    return http.status!=404;
}

